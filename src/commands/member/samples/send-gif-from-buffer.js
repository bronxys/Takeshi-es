const { PREFIX, ASSETS_DIR } = require(`${BASE_DIR}/config`);
const { delay } = require("baileys");
const path = require("node:path");
const fs = require("node:fs");
const { getBuffer } = require(`${BASE_DIR}/utils`);

module.exports = {
  name: "send-gif-from-buffer",
  description: "Ejemplo de cÃ³mo enviar gifs desde buffers",
  commands: ["send-gif-from-buffer"],
  usage: `${PREFIX}send-gif-from-buffer`,
  /**
   * @param {CommandHandleProps} props
   * @returns {Promise<void>}
   */
  handle: async ({ sendReply, sendGifFromBuffer, sendReact, userJid }) => {
    await sendReact("ðŸ’¾");

    await delay(3000);

    await sendReply("Voy a enviar gifs desde buffers (archivo local y URL)");

    await delay(3000);

    const fileBuffer = fs.readFileSync(
      path.join(ASSETS_DIR, "samples", "sample-video.mp4")
    );

    await sendGifFromBuffer(fileBuffer);

    await delay(3000);

    await sendReply("Ahora desde un buffer obtenido de una URL:");

    await delay(3000);

    const urlBuffer = await getBuffer(
      "https://api.spiderx.com.br/storage/samples/sample-video.mp4"
    );

    await sendGifFromBuffer(urlBuffer, "Â¡GIF cargado de URL a buffer!");

    await delay(3000);

    await sendReply("Con menciÃ³n:");

    await delay(3000);

    await sendGifFromBuffer(
      fileBuffer,
      `@${userJid.split("@")[0]} Â¡este gif provino de un buffer!`,
      [userJid]
    );

    await delay(3000);

    await sendReply("Y sin responder a tu mensaje:");

    await delay(3000);

    await sendGifFromBuffer(
      fileBuffer,
      "GIF de buffer sin respuesta",
      null,
      false
    );

    await delay(3000);

    await sendReply(
      "Para enviar imÃ¡genes desde archivo, usa la funciÃ³n sendGifFromBuffer(buffer, caption, [mentions], quoted).\n\n" +
        "Â¡Esto es Ãºtil para gifs generados dinÃ¡micamente o convertidos de otros formatos!"
    );

    await delay(3000);

    await sendReply(
      "ðŸ’¾ *Ventajas de los buffers:*\n\n" +
        "â€¢ Procesamiento en memoria\n" +
        "â€¢ ConversiÃ³n de formatos\n" +
        "â€¢ ManipulaciÃ³n de datos\n" +
        "â€¢ CachÃ© temporal\n\n" +
        "ðŸ’¡ *Consejo:* Â¡Los buffers son Ãºtiles para GIFs generados dinÃ¡micamente o convertidos!"
    );
  },
};
